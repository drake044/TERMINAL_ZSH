#!/usr/bin/env node

'use strict';

process.title = 'figlet';

var figlet = require('figlet'),
    optimist = require('optimist')
    .usage('Usage: $0 "text to print"')
    .alias('h', 'help')
    .alias('v', 'version')
    .alias('l', 'list')
    .describe('l', 'List all the available fonts')
    .alias('f', 'font')
    .describe('f', 'A string value that indicates the FIGlet font to use')
    .alias('ff', 'fontfile')
    .describe('ff', 'A string value that specifies the FIGlet font file to use')
    .describe('horizontal-layout', 'A string value that indicates the horizontal layout to use')
    .describe('vertical-layout', 'A string value that indicates the vertical layout to use');

var argv = optimist.argv;
var text = argv._.join(' ');
var options = {};

if (argv.version) {
    return console.log(require('../package.json').version);
}

if (argv.list) {
    figlet.fonts(function(err, fonts) {
        if (err) {
          console.log('something went wrong...');
          console.dir(err);
          return;
        }
        fonts.forEach(function(font) {
            console.log(font);
        });
    });
    return;
}

if (!text || argv.help) {
    return console.log(optimist.help());
}

if (argv.font && argv.fontfile) {
    return console.log('The options --font and --fontfile are mutually exclusive');
}

if (argv.font) options.font = argv.font
if (argv.fontfile) {
    const fs = require('fs');
    const data = fs.readFileSync(argv.fontfile, 'utf8');
    figlet.parseFont('customfont', data);
    options.font = 'customfont';
}
if (argv['horizontal-layout']) options.horizontalLayout = argv['horizontal-layout']
if (argv['vertical-layout']) options.verticalLayout = argv['vertical-layout']

figlet(text, options, function(err, data) {
    if (err) {
        console.log('Something went wrong...');
        console.dir(err);
        return;
    }
    data = data.replace(/%/g, '%%');
    console.log(data);
});